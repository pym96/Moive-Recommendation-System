{"remainingRequest":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/babel-loader/lib/index.js!/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/panyiming/Documents/code/Movie recommdation system/vue/src/views/Charts/Dash1/charts/LineSectionsChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/src/views/Charts/Dash1/charts/LineSectionsChart.vue","mtime":1645256468000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wYW55aW1pbmcvRG9jdW1lbnRzL2NvZGUvTW92aWUgcmVjb21tZGF0aW9uIHN5c3RlbS92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXRDaGFydDEgfSBmcm9tICIuLi8uLi8uLi8uLi9hcGkvbW92aWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NlY3Rpb25zTGluZUNoYXJ0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnRPcHRpb246IHt9LAogICAgICBzZXJpZXNEYXRhOiBbXSwKICAgICAgeEF4aXNEYXRhOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0Q2hhcnQxKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5zZXJpZXNEYXRhID0gcmVzLmRhdGEuZGF0YS5hbGwubWFwKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBpLnZhbHVlOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfdGhpcy54QXhpc0RhdGEgPSByZXMuZGF0YS5kYXRhLmFsbC5tYXAoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGkubmFtZTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIF90aGlzLmNoYXJ0T3B0aW9uID0gX3RoaXMuYnVpbGRDaGFydE9wdGlvbigpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgYnVpbGRDaGFydE9wdGlvbjogZnVuY3Rpb24gYnVpbGRDaGFydE9wdGlvbigpIHsKICAgICAgdmFyIG9wdGlvbiA9IHsKICAgICAgICAvLyBiYWNrZ3JvdW5kQ29sb3I6ICcjMzk0MDU2JywKICAgICAgICB0aXRsZTogey8vIHRleHQ6ICdMaW5lIC0gU2VjdGlvbnMnLAogICAgICAgICAgLy8gdGV4dFN0eWxlOiB7CiAgICAgICAgICAvLyAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLAogICAgICAgICAgLy8gICBmb250U2l6ZTogMjAsCiAgICAgICAgICAvLyAgIGNvbG9yOiAnI0YxRjFGMycsCiAgICAgICAgICAvLyB9LAogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLAogICAgICAgICAgICBmb250U2l6ZTogMjAsCiAgICAgICAgICAgIGNvbG9yOiAnI0YxRjFGMycKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdjcm9zcycKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICByaWdodDogMjAsCiAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7fQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICBkYXRhOiB0aGlzLnhBeGlzRGF0YSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzc4OTA5QycKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgLy8gZm9ybWF0dGVyOiAne3ZhbHVlfSBLJywKICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfScKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICBzbmFwOiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNzg5MDlDJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB2aXN1YWxNYXA6IHsKICAgICAgICAgIHR5cGU6ICdwaWVjZXdpc2UnLAogICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICBkaW1lbnNpb246IDAsCiAgICAgICAgICBwaWVjZXM6IFsvLyB7CiAgICAgICAgICAgIC8vICAgbHRlOiA3LAogICAgICAgICAgICAvLyAgIGNvbG9yOiAnZ3JlZW4nLAogICAgICAgICAgICAvLyB9LAogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgZ3Q6IDcsCiAgICAgICAgICAgIC8vICAgbHRlOiAxMCwKICAgICAgICAgICAgLy8gICBjb2xvcjogJ3JlZCcsCiAgICAgICAgICAgIC8vIH0sCiAgICAgICAgICAgIC8vIHsKICAgICAgICAgICAgLy8gICBndDogMTAsCiAgICAgICAgICAgIC8vICAgbHRlOiAxNywKICAgICAgICAgICAgLy8gICBjb2xvcjogJ2dyZWVuJywKICAgICAgICAgICAgLy8gfSwKICAgICAgICAgICAgLy8gewogICAgICAgICAgICAvLyAgIGd0OiAxNywKICAgICAgICAgICAgLy8gICBsdGU6IDIyLAogICAgICAgICAgICAvLyAgIGNvbG9yOiAncmVkJywKICAgICAgICAgICAgLy8gfSwKICAgICAgICAgICAgLy8gewogICAgICAgICAgICAvLyAgIGd0OiAyMiwKICAgICAgICAgICAgLy8gICBjb2xvcjogJ2dyZWVuJywKICAgICAgICAgICAgLy8gfSwKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICfkuIrmmKDmg4XlhrUnLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgZGF0YTogdGhpcy5zZXJpZXNEYXRhLAogICAgICAgICAgbWFya0FyZWE6IHsKICAgICAgICAgICAgZGF0YTogW1t7CiAgICAgICAgICAgICAgbmFtZTogJ+mrmOWzsCcsCiAgICAgICAgICAgICAgeEF4aXM6ICcxOTkwLTIwMDAnCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICB4QXhpczogJzIwMTAtMjAyMCcKICAgICAgICAgICAgfV0sIFt7CiAgICAgICAgICAgICAgbmFtZTogJ+S9jua9ricsCiAgICAgICAgICAgICAgeEF4aXM6ICcxOTYwLTE5NzAnCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICB4QXhpczogJzE5NzAtMTk4MCcKICAgICAgICAgICAgfV1dLAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNGRjhBNjUnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICByZXR1cm4gb3B0aW9uOwogICAgfQogIH0KfTs="},{"version":3,"sources":["LineSectionsChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-chart\n    style='width:100%;'\n    :options='chartOption'\n    autoresize\n  />\n</template>\n\n<script>\nimport {getChart1} from \"../../../../api/movie\";\n\nexport default {\n  name: 'SectionsLineChart',\n  data() {\n    return {\n      chartOption: {},\n      seriesData: [],\n      xAxisData: []\n    };\n  },\n  async mounted() {\n    await getChart1().then(res => {\n      this.seriesData = res.data.data.all.map(i => i.value)\n      this.xAxisData = res.data.data.all.map(i => i.name)\n    })\n    this.chartOption = this.buildChartOption();\n  },\n  methods: {\n    buildChartOption() {\n      const option = {\n        // backgroundColor: '#394056',\n        title: {\n          // text: 'Line - Sections',\n          // textStyle: {\n          //   fontWeight: 'normal',\n          //   fontSize: 20,\n          //   color: '#F1F1F3',\n          // },\n        },\n        legend: {\n          show: true,\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 20,\n            color: '#F1F1F3',\n          },\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n          },\n        },\n        toolbox: {\n          show: true,\n          right: 20,\n          feature: {\n            saveAsImage: {},\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: this.xAxisData,\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            // formatter: '{value} K',\n            formatter: '{value}',\n          },\n          axisPointer: {\n            snap: true,\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        },\n        visualMap: {\n          type: 'piecewise',\n          show: false,\n          dimension: 0,\n          pieces: [\n            // {\n            //   lte: 7,\n            //   color: 'green',\n            // },\n            // {\n            //   gt: 7,\n            //   lte: 10,\n            //   color: 'red',\n            // },\n            // {\n            //   gt: 10,\n            //   lte: 17,\n            //   color: 'green',\n            // },\n            // {\n            //   gt: 17,\n            //   lte: 22,\n            //   color: 'red',\n            // },\n            // {\n            //   gt: 22,\n            //   color: 'green',\n            // },\n          ],\n        },\n        series: [\n          {\n            name: '上映情况',\n            type: 'line',\n            smooth: true,\n            data: this.seriesData,\n            markArea: {\n              data: [\n                [\n                  {\n                    name: '高峰',\n                    xAxis: '1990-2000',\n                  },\n                  {\n                    xAxis: '2010-2020',\n                  },\n                ],\n                [\n                  {\n                    name: '低潮',\n                    xAxis: '1960-1970',\n                  },\n                  {\n                    xAxis: '1970-1980',\n                  },\n                ],\n              ],\n              itemStyle: {\n                color: '#FF8A65',\n              },\n            },\n          },\n        ],\n      };\n\n      return option;\n    },\n  }\n};\n</script>\n"],"sourceRoot":"src/views/Charts/Dash1/charts"}]}