{"remainingRequest":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/babel-loader/lib/index.js!/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/panyiming/Documents/code/Movie recommdation system/vue/src/views/Charts/Dash1/charts/LineSplitAreaChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/src/views/Charts/Dash1/charts/LineSplitAreaChart.vue","mtime":1645270482000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wYW55aW1pbmcvRG9jdW1lbnRzL2NvZGUvTW92aWUgcmVjb21tZGF0aW9uIHN5c3RlbS92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXRDaGFydDMgfSBmcm9tICIuLi8uLi8uLi8uLi9hcGkvbW92aWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NwbGl0QXJlYUxpbmVDaGFydCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uOiB7fSwKICAgICAgeEF4aXNEYXRhOiBbXSwKICAgICAgc2VyaWVzQURhdGE6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBnZXRDaGFydDMoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIF90aGlzLnhBeGlzRGF0YSA9IHJlcy5kYXRhLmRhdGEubWFwKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBpLm5hbWU7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzLnNlcmllc0FEYXRhID0gcmVzLmRhdGEuZGF0YS5tYXAoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGkudmFsdWU7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy5jaGFydE9wdGlvbiA9IF90aGlzLmJ1aWxkQ2hhcnRPcHRpb24oKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1aWxkQ2hhcnRPcHRpb246IGZ1bmN0aW9uIGJ1aWxkQ2hhcnRPcHRpb24oKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCd4QXhpc0RhdGEnLHhBeGlzRGF0YSk7CiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiB0aGlzLnhBeGlzRGF0YSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzc4OTA5QycKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBpY29uOiAncmVjdCcsCiAgICAgICAgICBpdGVtR2FwOiAxNSwKICAgICAgICAgIGl0ZW1XaWR0aDogMTYsCiAgICAgICAgICBpdGVtSGVpZ2h0OiAxMCwKICAgICAgICAgIGRhdGE6IFsn5LiK5pig5pWwJ10sCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IDE0LAogICAgICAgICAgICBjb2xvcjogJyNFQ0VGRjEnCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzc4OTA5QycKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNzg5MDlDJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAn5LiK5pig5pWwJywKICAgICAgICAgIGRhdGE6IHRoaXMuc2VyaWVzQURhdGEsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDE2LCA5NywgMjA0LCAxKScsCiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDE3LCAyMzUsIDIxMCwgMC4yMCknLAogICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxMgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgcmV0dXJuIG9wdGlvbjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["LineSplitAreaChart.vue"],"names":[],"mappings":";;;;;;;;;;;;AASA,SAAA,SAAA,QAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,SAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AACA,gBAAA,KAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,KAAA;AAAA,iBAAA,CAAA;AACA,eAHA,CADA;;AAAA;AAMA,cAAA,KAAA,CAAA,WAAA,GAAA,KAAA,CAAA,gBAAA,EAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,IAAA,EAAA,KAAA,SAFA;AAGA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AADA;AAHA,SADA;AAUA,QAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,OAAA,EAAA,EAFA;AAGA,UAAA,SAAA,EAAA,EAHA;AAIA,UAAA,UAAA,EAAA,EAJA;AAKA,UAAA,IAAA,EAAA,CAAA,KAAA,CALA;AAMA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,EADA;AAEA,YAAA,KAAA,EAAA;AAFA;AANA,SAVA;AAqBA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AADA;AAFA,SArBA;AA6BA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AADA;AAFA,SA7BA;AAqCA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA,KAAA,WAFA;AAGA,UAAA,IAAA,EAAA,MAHA;AAIA,UAAA,MAAA,EAAA,IAJA;AAKA,UAAA,SAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,cAAA,KAAA,EAAA,sBADA;AAEA,cAAA,WAAA,EAAA,0BAFA;AAGA,cAAA,WAAA,EAAA;AAHA;AADA;AALA,SADA;AArCA,OAAA;AAsDA,aAAA,MAAA;AACA;AA1DA;AAjBA,CAAA","sourcesContent":["<template>\n  <v-chart\n    style=\"width:100%;\"\n    :options=\"chartOption\"\n    autoresize\n  />\n</template>\n\n<script>\nimport {getChart3} from \"../../../../api/movie\";\n\nexport default {\n  name: 'SplitAreaLineChart',\n  data() {\n    return {\n      chartOption: {},\n      xAxisData: [],\n      seriesAData: [],\n    };\n  },\n  async mounted() {\n    await getChart3().then(res => {\n      this.xAxisData = res.data.data.map(i => i.name)\n      this.seriesAData = res.data.data.map(i => i.value)\n    })\n\n    this.chartOption = this.buildChartOption();\n  },\n  methods: {\n    buildChartOption() {\n      // console.log('xAxisData',xAxisData);\n      const option = {\n        xAxis: {\n          type: 'category',\n          data: this.xAxisData,\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        },\n        legend: {\n          icon: 'rect',\n          itemGap: 15,\n          itemWidth: 16,\n          itemHeight: 10,\n          data: ['上映数'],\n          textStyle: {\n            fontSize: 14,\n            color: '#ECEFF1',\n          },\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        },\n        series: [\n          {\n            name: '上映数',\n            data: this.seriesAData,\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              normal: {\n                color: 'rgba(16, 97, 204, 1)',\n                borderColor: 'rgba(17, 235, 210, 0.20)',\n                borderWidth: 12,\n              },\n            },\n          }\n        ]\n      };\n\n      return option;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/Charts/Dash1/charts"}]}