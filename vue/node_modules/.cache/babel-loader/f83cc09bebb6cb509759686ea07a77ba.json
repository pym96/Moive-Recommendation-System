{"remainingRequest":"/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/node_modules/babel-loader/lib/index.js!/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/src/views/Charts/Dash1/charts/LineBigDataChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/src/views/Charts/Dash1/charts/LineBigDataChart.vue","mtime":1645264692000},{"path":"/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jason/Desktop/基于机器学习的电影推荐系统/python豆瓣电影情感分析推荐系统（12-23）/python豆瓣电影情感分析推荐系统/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qYXNvbi9EZXNrdG9wL1x1NTdGQVx1NEU4RVx1NjczQVx1NTY2OFx1NUI2Nlx1NEU2MFx1NzY4NFx1NzUzNVx1NUY3MVx1NjNBOFx1ODM1MFx1N0NGQlx1N0VERi9weXRob25cdThDNDZcdTc0RTNcdTc1MzVcdTVGNzFcdTYwQzVcdTYxMUZcdTUyMDZcdTY3OTBcdTYzQThcdTgzNTBcdTdDRkJcdTdFREZcdUZGMDgxMi0yM1x1RkYwOS9weXRob25cdThDNDZcdTc0RTNcdTc1MzVcdTVGNzFcdTYwQzVcdTYxMUZcdTUyMDZcdTY3OTBcdTYzQThcdTgzNTBcdTdDRkJcdTdFREYvdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cy9saWIvZWNoYXJ0cyc7CmltcG9ydCB7IGdldENoYXJ0MyB9IGZyb20gIi4uLy4uLy4uLy4uL2FwaS9tb3ZpZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmlnRGF0YUxpbmVDaGFydCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uOiB7fSwKICAgICAgeEF4aXNEYXRhOiBbXSwKICAgICAgc2VyaWVzQURhdGE6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBnZXRDaGFydDMoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIF90aGlzLnhBeGlzRGF0YSA9IHJlcy5kYXRhLmRhdGEubWFwKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBpLm5hbWU7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzLnNlcmllc0FEYXRhID0gcmVzLmRhdGEuZGF0YS5tYXAoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGkudmFsdWU7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy5jaGFydE9wdGlvbiA9IF90aGlzLmJ1aWxkQ2hhcnRPcHRpb24oKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1aWxkQ2hhcnRPcHRpb246IGZ1bmN0aW9uIGJ1aWxkQ2hhcnRPcHRpb24oKSB7CiAgICAgIC8vIGxldCBiYXNlID0gK25ldyBEYXRlKDE5NDksIDgsIDEpOwogICAgICB2YXIgZGF0ZSA9IFtdOwogICAgICB2YXIgZGF0YSA9IFs2MDBdOyAvLyBjb25zdCBvbmVEYXkgPSAyNCAqIDM2MDAgKiAxMDAwOwoKICAgICAgZGF0YSA9IHRoaXMuc2VyaWVzQURhdGE7CiAgICAgIGRhdGUgPSB0aGlzLnhBeGlzRGF0YTsgLy8gZm9yIChsZXQgaSA9IDE7IGkgPCAyNjAwMDsgaSArPSAxKSB7CiAgICAgIC8vICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKGJhc2UgKz0gb25lRGF5KSk7CiAgICAgIC8vICAgZGF0ZS5wdXNoKFtub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCkgKyAxLCBub3cuZ2V0RGF0ZSgpXS5qb2luKCcvJykpOwogICAgICAvLyAgIGRhdGEucHVzaChNYXRoLmFicyhNYXRoLnJvdW5kKChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDMwICsgZGF0YVtpIC0gMV0pKSk7CiAgICAgIC8vIH0KCiAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsvLyB0ZXh0OiAnTGluZSAtIEJpZyBEYXRhJywKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHJpZ2h0OiAxMCwKICAgICAgICAgIGxlZnQ6IDIwLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBwb3NpdGlvbjogZnVuY3Rpb24gcG9zaXRpb24ocHQpIHsKICAgICAgICAgICAgcmV0dXJuIFtwdFswXSwgJzEwJSddOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdG9vbGJveDogewogICAgICAgICAgcmlnaHQ6IDIwLAogICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICBkYXRhWm9vbTogewogICAgICAgICAgICAgIHlBeGlzSW5kZXg6ICdub25lJwogICAgICAgICAgICB9LAogICAgICAgICAgICByZXN0b3JlOiB7fSwKICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHt9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGRhdGE6IGRhdGUsCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyM3ODkwOUMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgYm91bmRhcnlHYXA6IFswLCAnMTAwJSddLAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNzg5MDlDJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBkYXRhWm9vbTogW3sKICAgICAgICAgIHR5cGU6ICdpbnNpZGUnLAogICAgICAgICAgc3RhcnQ6IDAsCiAgICAgICAgICBlbmQ6IDYwCiAgICAgICAgfSwgewogICAgICAgICAgc3RhcnQ6IDAsCiAgICAgICAgICBlbmQ6IDEwLAogICAgICAgICAgaGFuZGxlSWNvbjogJ00xMC43LDExLjl2LTEuM0g5LjN2MS4zYy00LjksMC4zLTguOCw0LjQtOC44LDkuNGMwLDUsMy45LDkuMSw4LjgsOS40djEuM2gxLjN2LTEuM2M0LjktMC4zLDguOC00LjQsOC44LTkuNEMxOS41LDE2LjMsMTUuNiwxMi4yLDEwLjcsMTEuOXogTTEzLjMsMjQuNEg2LjdWMjNoNi42VjI0LjR6IE0xMy4zLDE5LjZINi43di0xLjRoNi42VjE5LjZ6JywKICAgICAgICAgIGhhbmRsZVNpemU6ICc4MCUnLAogICAgICAgICAgaGFuZGxlU3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjZmZmJywKICAgICAgICAgICAgc2hhZG93Qmx1cjogMywKICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNiknLAogICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAyLAogICAgICAgICAgICBzaGFkb3dPZmZzZXRZOiAyCiAgICAgICAgICB9LAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdub3JtYWwnLAogICAgICAgICAgICBmb250U2l6ZTogMjAsCiAgICAgICAgICAgIGNvbG9yOiAnI0YxRjFGMycKICAgICAgICAgIH0KICAgICAgICB9XSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAn5pWw5o2uJywKICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICAgIHN5bWJvbDogJ25vbmUnLAogICAgICAgICAgc2FtcGxpbmc6ICdhdmVyYWdlJywKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBjb2xvcjogJ3JnYigyNTUsIDcwLCAxMzEpJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDEsIFt7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYigyNTUsIDE1OCwgNjgpJwogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgICAgICAgIGNvbG9yOiAncmdiKDI1NSwgNzAsIDEzMSknCiAgICAgICAgICAgICAgfV0pCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiBkYXRhCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgcmV0dXJuIG9wdGlvbjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["LineBigDataChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-chart\n    style=\"width:100%;\"\n    :options=\"chartOption\"\n    autoresize\n  />\n</template>\n\n<script>\nimport echarts from 'echarts/lib/echarts';\nimport {getChart3} from \"../../../../api/movie\";\n\nexport default {\n  name: 'BigDataLineChart',\n  data() {\n    return {\n      chartOption: {},\n      xAxisData: [],\n      seriesAData: [],\n    };\n  },\n  async mounted() {\n    await getChart3().then(res => {\n      this.xAxisData = res.data.data.map(i => i.name)\n      this.seriesAData = res.data.data.map(i => i.value)\n    })\n\n    this.chartOption = this.buildChartOption();\n  },\n  methods: {\n    buildChartOption() {\n      // let base = +new Date(1949, 8, 1);\n      let date = [];\n      let data = [600];\n      // const oneDay = 24 * 3600 * 1000;\n\n      data = this.seriesAData\n      date = this.xAxisData\n\n      // for (let i = 1; i < 26000; i += 1) {\n      //   const now = new Date((base += oneDay));\n      //   date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));\n      //   data.push(Math.abs(Math.round((Math.random() - 0.5) * 30 + data[i - 1])));\n      // }\n\n      const option = {\n        title: {\n          // text: 'Line - Big Data',\n        },\n        grid: {\n          right: 10,\n          left: 20,\n          containLabel: true,\n        },\n        tooltip: {\n          trigger: 'axis',\n          position(pt) {\n            return [pt[0], '10%'];\n          },\n        },\n        toolbox: {\n          right: 20,\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none',\n            },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: date,\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: [0, '100%'],\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        },\n        dataZoom: [\n          {\n            type: 'inside',\n            start: 0,\n            end: 60,\n          },\n          {\n            start: 0,\n            end: 10,\n            handleIcon:\n              'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n            handleSize: '80%',\n            handleStyle: {\n              color: '#fff',\n              shadowBlur: 3,\n              shadowColor: 'rgba(0, 0, 0, 0.6)',\n              shadowOffsetX: 2,\n              shadowOffsetY: 2,\n            },\n            textStyle: {\n              fontWeight: 'normal',\n              fontSize: 20,\n              color: '#F1F1F3',\n            },\n          },\n        ],\n        series: [\n          {\n            name: '数据',\n            type: 'line',\n            smooth: true,\n            symbol: 'none',\n            sampling: 'average',\n            itemStyle: {\n              normal: {\n                color: 'rgb(255, 70, 131)',\n              },\n            },\n            areaStyle: {\n              normal: {\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: 'rgb(255, 158, 68)',\n                  },\n                  {\n                    offset: 1,\n                    color: 'rgb(255, 70, 131)',\n                  },\n                ]),\n              },\n            },\n            data,\n          },\n        ],\n      };\n\n      return option;\n    },\n  }\n};\n</script>\n"],"sourceRoot":"src/views/Charts/Dash1/charts"}]}