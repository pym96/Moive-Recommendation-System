{"remainingRequest":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/panyiming/Documents/code/Movie recommdation system/vue/src/views/Charts/Dash1/charts/LineBigDataChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/src/views/Charts/Dash1/charts/LineBigDataChart.vue","mtime":1645264692000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panyiming/Documents/code/Movie recommdation system/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMvbGliL2VjaGFydHMnOwppbXBvcnQge2dldENoYXJ0M30gZnJvbSAiLi4vLi4vLi4vLi4vYXBpL21vdmllIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmlnRGF0YUxpbmVDaGFydCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uOiB7fSwKICAgICAgeEF4aXNEYXRhOiBbXSwKICAgICAgc2VyaWVzQURhdGE6IFtdLAogICAgfTsKICB9LAogIGFzeW5jIG1vdW50ZWQoKSB7CiAgICBhd2FpdCBnZXRDaGFydDMoKS50aGVuKHJlcyA9PiB7CiAgICAgIHRoaXMueEF4aXNEYXRhID0gcmVzLmRhdGEuZGF0YS5tYXAoaSA9PiBpLm5hbWUpCiAgICAgIHRoaXMuc2VyaWVzQURhdGEgPSByZXMuZGF0YS5kYXRhLm1hcChpID0+IGkudmFsdWUpCiAgICB9KQoKICAgIHRoaXMuY2hhcnRPcHRpb24gPSB0aGlzLmJ1aWxkQ2hhcnRPcHRpb24oKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1aWxkQ2hhcnRPcHRpb24oKSB7CiAgICAgIC8vIGxldCBiYXNlID0gK25ldyBEYXRlKDE5NDksIDgsIDEpOwogICAgICBsZXQgZGF0ZSA9IFtdOwogICAgICBsZXQgZGF0YSA9IFs2MDBdOwogICAgICAvLyBjb25zdCBvbmVEYXkgPSAyNCAqIDM2MDAgKiAxMDAwOwoKICAgICAgZGF0YSA9IHRoaXMuc2VyaWVzQURhdGEKICAgICAgZGF0ZSA9IHRoaXMueEF4aXNEYXRhCgogICAgICAvLyBmb3IgKGxldCBpID0gMTsgaSA8IDI2MDAwOyBpICs9IDEpIHsKICAgICAgLy8gICBjb25zdCBub3cgPSBuZXcgRGF0ZSgoYmFzZSArPSBvbmVEYXkpKTsKICAgICAgLy8gICBkYXRlLnB1c2goW25vdy5nZXRGdWxsWWVhcigpLCBub3cuZ2V0TW9udGgoKSArIDEsIG5vdy5nZXREYXRlKCldLmpvaW4oJy8nKSk7CiAgICAgIC8vICAgZGF0YS5wdXNoKE1hdGguYWJzKE1hdGgucm91bmQoKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMzAgKyBkYXRhW2kgLSAxXSkpKTsKICAgICAgLy8gfQoKICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAvLyB0ZXh0OiAnTGluZSAtIEJpZyBEYXRhJywKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHJpZ2h0OiAxMCwKICAgICAgICAgIGxlZnQ6IDIwLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgcG9zaXRpb24ocHQpIHsKICAgICAgICAgICAgcmV0dXJuIFtwdFswXSwgJzEwJSddOwogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgIHJpZ2h0OiAyMCwKICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgZGF0YVpvb206IHsKICAgICAgICAgICAgICB5QXhpc0luZGV4OiAnbm9uZScsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHJlc3RvcmU6IHt9LAogICAgICAgICAgICBzYXZlQXNJbWFnZToge30sCiAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICBkYXRhOiBkYXRlLAogICAgICAgICAgYXhpc0xpbmU6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjNzg5MDlDJywKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCgogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBib3VuZGFyeUdhcDogWzAsICcxMDAlJ10sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyM3ODkwOUMnLAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIGRhdGFab29tOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICdpbnNpZGUnLAogICAgICAgICAgICBzdGFydDogMCwKICAgICAgICAgICAgZW5kOiA2MCwKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXJ0OiAwLAogICAgICAgICAgICBlbmQ6IDEwLAogICAgICAgICAgICBoYW5kbGVJY29uOgogICAgICAgICAgICAgICdNMTAuNywxMS45di0xLjNIOS4zdjEuM2MtNC45LDAuMy04LjgsNC40LTguOCw5LjRjMCw1LDMuOSw5LjEsOC44LDkuNHYxLjNoMS4zdi0xLjNjNC45LTAuMyw4LjgtNC40LDguOC05LjRDMTkuNSwxNi4zLDE1LjYsMTIuMiwxMC43LDExLjl6IE0xMy4zLDI0LjRINi43VjIzaDYuNlYyNC40eiBNMTMuMywxOS42SDYuN3YtMS40aDYuNlYxOS42eicsCiAgICAgICAgICAgIGhhbmRsZVNpemU6ICc4MCUnLAogICAgICAgICAgICBoYW5kbGVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicsCiAgICAgICAgICAgICAgc2hhZG93Qmx1cjogMywKICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC42KScsCiAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMiwKICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRZOiAyLAogICAgICAgICAgICB9LAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnbm9ybWFsJywKICAgICAgICAgICAgICBmb250U2l6ZTogMjAsCiAgICAgICAgICAgICAgY29sb3I6ICcjRjFGMUYzJywKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+aVsOaNricsCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgICBzeW1ib2w6ICdub25lJywKICAgICAgICAgICAgc2FtcGxpbmc6ICdhdmVyYWdlJywKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYigyNTUsIDcwLCAxMzEpJywKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBhcmVhU3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiBuZXcgZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDEsIFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYigyNTUsIDE1OCwgNjgpJywKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYigyNTUsIDcwLCAxMzEpJywKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGEsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgIH07CgogICAgICByZXR1cm4gb3B0aW9uOwogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["LineBigDataChart.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"LineBigDataChart.vue","sourceRoot":"src/views/Charts/Dash1/charts","sourcesContent":["<template>\n  <v-chart\n    style=\"width:100%;\"\n    :options=\"chartOption\"\n    autoresize\n  />\n</template>\n\n<script>\nimport echarts from 'echarts/lib/echarts';\nimport {getChart3} from \"../../../../api/movie\";\n\nexport default {\n  name: 'BigDataLineChart',\n  data() {\n    return {\n      chartOption: {},\n      xAxisData: [],\n      seriesAData: [],\n    };\n  },\n  async mounted() {\n    await getChart3().then(res => {\n      this.xAxisData = res.data.data.map(i => i.name)\n      this.seriesAData = res.data.data.map(i => i.value)\n    })\n\n    this.chartOption = this.buildChartOption();\n  },\n  methods: {\n    buildChartOption() {\n      // let base = +new Date(1949, 8, 1);\n      let date = [];\n      let data = [600];\n      // const oneDay = 24 * 3600 * 1000;\n\n      data = this.seriesAData\n      date = this.xAxisData\n\n      // for (let i = 1; i < 26000; i += 1) {\n      //   const now = new Date((base += oneDay));\n      //   date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));\n      //   data.push(Math.abs(Math.round((Math.random() - 0.5) * 30 + data[i - 1])));\n      // }\n\n      const option = {\n        title: {\n          // text: 'Line - Big Data',\n        },\n        grid: {\n          right: 10,\n          left: 20,\n          containLabel: true,\n        },\n        tooltip: {\n          trigger: 'axis',\n          position(pt) {\n            return [pt[0], '10%'];\n          },\n        },\n        toolbox: {\n          right: 20,\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none',\n            },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: date,\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: [0, '100%'],\n          axisLine: {\n            lineStyle: {\n              color: '#78909C',\n            },\n          },\n        },\n        dataZoom: [\n          {\n            type: 'inside',\n            start: 0,\n            end: 60,\n          },\n          {\n            start: 0,\n            end: 10,\n            handleIcon:\n              'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n            handleSize: '80%',\n            handleStyle: {\n              color: '#fff',\n              shadowBlur: 3,\n              shadowColor: 'rgba(0, 0, 0, 0.6)',\n              shadowOffsetX: 2,\n              shadowOffsetY: 2,\n            },\n            textStyle: {\n              fontWeight: 'normal',\n              fontSize: 20,\n              color: '#F1F1F3',\n            },\n          },\n        ],\n        series: [\n          {\n            name: '数据',\n            type: 'line',\n            smooth: true,\n            symbol: 'none',\n            sampling: 'average',\n            itemStyle: {\n              normal: {\n                color: 'rgb(255, 70, 131)',\n              },\n            },\n            areaStyle: {\n              normal: {\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: 'rgb(255, 158, 68)',\n                  },\n                  {\n                    offset: 1,\n                    color: 'rgb(255, 70, 131)',\n                  },\n                ]),\n              },\n            },\n            data,\n          },\n        ],\n      };\n\n      return option;\n    },\n  }\n};\n</script>\n"]}]}